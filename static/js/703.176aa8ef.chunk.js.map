{"version":3,"file":"static/js/703.176aa8ef.chunk.js","mappings":"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","sources":["Components/Headers/header.styled.ts","Components/Navigations/Navigation.styled.ts","Redax/Auth/authSelector.ts","hooks/auth.ts","Components/Navigations/Navigation.tsx","Components/Burger-menu/BurgerMenu.styled.ts","Components/Forms/LoginForm.styled.ts","Components/googleAuth/googleAuth.tsx","Components/Forms/LoginForm.tsx","Components/Forms/RegistrationForm.tsx","Components/Headers/headerButton.tsx","Components/Burger-menu/BurgerMenu.tsx","Components/Headers/header.tsx","Components/Layouts/layout.tsx"],"sourcesContent":["\timport styled from \"styled-components\";\n\n\nexport const HeaderSection = styled.header`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nflex-wrap: wrap;\n\n@media(min-width: 700px){\n\tmax-width: 1184px;\n\tmargin-right: auto;\n    margin-left: auto;\n\tcolor: var(----button-color-hover);\n}\n`\n\nexport const LogoConteiner = styled.div`\ndisplay: flex;\nalign-items: center;\ngap: 5px;\n\n\np{\n    font-weight: 500;\n\tcolor: var(--text-color);\n\tfont-size: 20px;\n  \tbox-sizing: border-box;\n}\n\nimg{\n\twidth: 28px;\n\theight: 28px;\n}\n\n\n`\n\nexport const HeaderWrapper = styled.div`\n@media(max-width: 700px){\n\tdisplay: none;\n}\n`\n\nexport const Navigation = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\n\n@media(max-width: 700px){\ndisplay: none;\n}\n\n`\n\nexport const NavigationButton = styled.div`\ndisplay: flex;\nalign-items: center;\ngap: 16px;\n\np{\t\n\tposition: relative;\n\tborder-radius: 2px;\n\tfont-weight: 500;\n\tfont-style: italic;\n}\n\np::before{\n\tcontent: \"\";\n\tposition: absolute;\n\tbottom: 0;\n    width: 100%;\n\ttransform: translate(5%, -55%);\n    height: 10px;\n    background: var(--button-color-hover);\n\tz-index: -1;\n\tborder-radius: 3px;\n}\n\n@media(max-width: 700px){\n\tflex-direction: column;\n\tgap: 10px;\n\tpadding-top: 10px;\n\tmargin-top: 20px;\n\tborder-top: 1px solid var(--text-color-grey);\n}\n`","\nimport styled from \"styled-components\";\n\nexport const NavigationNav = styled.nav`\n\tdisplay: flex;\n    justify-content: space-around;\n\talign-items: center;\n\tgap: 20px;\n\n\t\ta{\n\t\t\tcolor: black;\n\t\t\tpadding: 6px;\n\t\t\tborder-bottom: 2px solid transparent;\n\t}\n\t.active{\n\t\tcolor: blue;\n\t\tborder-color: blue;\t\t\n\t}\n\n\t@media(max-width: 700px){\n\t\tflex-direction: column;\n\t\tgap: 10px;\n\t\talign-items: flex-start;\n\t\t\n\t\t}\n`","import { RootState } from \"../store\";\n\nexport const selectUser = (state: RootState) => state.user","import { useSelector } from 'react-redux';\nimport { selectUser } from '../Redax/Auth/authSelector';\n\ninterface AuthSelector {\n    name: string;\n    email: string;\n    token: string;\n    id: string;\n}\n\nexport const useAuth = () => {\n    const userData = useSelector(selectUser) as AuthSelector | undefined;\n\n    const { email = '', token = '', id = '', name = '' } = userData || {};\n\n    return {\n        isAuth: !!email,\n        email,\n        token,\n        id,\n        name,\n    };\n};\n","import React from 'react';\nimport { NavigationNav } from './Navigation.styled';\nimport { NavLink } from 'react-router-dom';\nimport { useAuth } from '../../hooks/auth';\n\nexport const Navigator = () => {\n\n  const { isAuth } = useAuth();\n\n  return (\n    <NavigationNav>\n\t\t  <NavLink className={({isActive}) =>\n\t\t\t  [\n\t\t\t\tisActive ? \"active\" : \"\",\n\t\t\t  ].join(\" \")} to=\"/\">\n        Home\n      </NavLink>\n      <NavLink className={({isActive}) =>\n\t\t\t  [\n\t\t\t\tisActive ? \"active\" : \"\",\n\t\t\t  ].join(\" \")}  to=\"/teachers\">\n        Teachers\n      </NavLink>\n      {isAuth && (\n        <NavLink className={({ isActive }) =>\n          [\n            isActive ? \"active\" : \"\",\n          ].join(\" \")} to=\"/favorites\">\n          Favorites\n        </NavLink>)\n        }\n    </NavigationNav>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const BurgerMenuContainer = styled.div`\nposition: relative;\ndisplay: none;\n\n@media(max-width: 700px){\ndisplay: block;\n\n    button{\n        display: flex;\n        align-items: center;\n        background-color: transparent;\n    }\n\n    svg{\n        width: 20px;\n        height: 20px;\n    }\n\n    button:hover{\n        color: var(--button-color-hover);\n    }\n}\n`\n\nexport const BurgerMenuModal = styled.div`\nposition: absolute;\nbackground-color: #ffffff;\ntop: 40px;\nright: 0;\nwidth: 250px;\npadding: 20px;\nborder: 2px solid black;\nborder-radius: 10px;\nz-index: 100;\n\n`","import Popup from \"reactjs-popup\";\nimport styled from \"styled-components\";\n\nexport const ButtonFormContainer = styled.div`\n    button{\n        display: flex;\n        align-items: center;\n        gap: 5px;\n\n        background-color: transparent;\n\n        font-size: 16px;\n        font-weight: 700;\n        line-height: 20px;\n\n        svg{\n            color: var(--button-color);\n            width: 20px;\n            height: 20px;\n        }\n    }\n\n    button:hover{\n        color: var(--button-color-hover);   \n        svg{\n            color: var(--button-color-hover);\n        }\n    }\n\n\n    \n    button.registration{\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n\n        height: 48px;\n        padding: 14px 39px;\n\n        border-radius: 12px;\n        background: rgb(18, 20, 23);\n        color: #ffffff;\n    }\n\n    button.registration:hover{\n        background: var(--button-color-hover);\n        color: #000000\n      \n    }\n\n\n\n`\n\nexport const StyledPopup = styled(Popup)`\n\n\n  &-overlay {\n  \n  }\n@media(max-width: 700px){\n  &-content {\n        max-width: 566px;\n        padding: 0;   \n        min-width: 100%;\n        border-radius: 0;\n    }  \n     }\n  &-content {\n        max-width: 566px;\n        padding: 0;   \n        border-radius: 30px;\n       \n    }  \n\n`\n\nexport const Modal = styled.div`\n        padding: 64px;\n        position: relative;\n overflow-y: scroll;\n        button.close{\n                position: absolute;\n                display: flex;\n                text-align: center;\n                top: 0;\n                right: 0;\n                transform: translate(-50%, 0);\n                padding: 8px;\n                width: 32px;\n                height: 32px;\n                font-size: 35px;\n                font-weight: 700;\n                background-color: transparent;\n                align-items: center;\n            \n        }\n\n        button.close:hover{\n            color: var(--button-color-hover);\n        }\n\n        h2{\n            font-size: 40px;\n            font-weight: 500;\n            line-height: 48px;\n            letter-spacing: -2%;\n            margin-bottom: 20px;\n        }\n\n        p{\n            font-size: 16px;\n            font-weight: 400;\n            line-height: 22px;\n            letter-spacing: -2%;\n            margin-bottom: 40px;\n        }\n       \n`\n\nexport const LoginRegistrationForm = styled.form`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        gap: 18px;\n        transition: all 0.3s ease-in-out;\n\n       div{\n            width: 100%;\n            position: relative;\n            \n       }\n\n       input{\n        width: 100%;\n        height: 54px;\n        padding: 16px 18px;\n        box-sizing: border-box;\n        border: 1px solid rgba(18, 20, 23, 0.1);\n        border-radius: 12px;\n       }\n       input#name{\n        padding-left: 60px;\n          }\n\n        input#email{\n        padding-left: 62px;\n          }\n\n        input#password{\n        padding-left: 82px;\n          }\n\n       label{\n        position: absolute;\n        top: 35%;\n        left: 5%;\n       }\n    \n\n`\n\nexport const ButtonModalContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 18px;\n    margin-top: 40px;\n\n    button{\n    border-radius: 12px;\n    height: 60px;\n    background-color: var(--button-color);\n    }\n\n    button:hover{\n        background-color: var(--button-color-hover);\n    }\n`","import React from 'react'\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { provider } from '../../firebase/conect';\nimport { AppDispatch } from '../../Redax/store';\nimport { useDispatch } from 'react-redux';\nimport { setUser } from '../../Redax/Auth/authSlice';\n\ntype Props = {}\n\nconst GoogleAuth = (props: Props) => {\n     const dispatch: AppDispatch = useDispatch();\n    const auth = getAuth();\n\n    const loginGoogle = () => {\n\n        signInWithPopup(auth, provider)\n            .then((result) => {\n                const credential = GoogleAuthProvider.credentialFromResult(result);\n                const user = result.user;\n              \n                dispatch(setUser({\n                    id: user.uid,\n                    email: user.email,\n                    name: user.displayName, // Ensure displayName is correctly set\n                    token: credential?.accessToken \n                }))\n\n            }).catch(() => {\" Invalid user\"});\n               \n    }\n\n\n  return (\n    <button type='button' onClick={loginGoogle}>Google</button>\n  )\n}\n\nexport default GoogleAuth","import React, {useState } from 'react'\nimport 'reactjs-popup/dist/index.css';\nimport { ButtonFormContainer, ButtonModalContainer, LoginRegistrationForm, Modal, StyledPopup } from './LoginForm.styled';\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useDispatch } from 'react-redux';\nimport { setUser } from '../../Redax/Auth/authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { AppDispatch } from '../../Redax/store';\nimport GoogleAuth from '../googleAuth/googleAuth';\n\nimport { CiLogin } from \"react-icons/ci\";\n// type Props = {}\n\nconst LoginForm: React.FC = () => {\n\n   const dispatch: AppDispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [open, setOpen] = useState(false);\n    const closeModal = () => setOpen(false);\n\n\n   \n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        const auth = getAuth();\n        signInWithEmailAndPassword(auth, email, password)\n            .then(({ user }) => {\n            user.getIdToken()\n                .then(accessToken => {\n                    dispatch(setUser({\n                        id: user.uid,\n                        email: user.email,\n                        name: user.displayName,\n                        token: accessToken, \n                    }))\n                     navigate('/');\n                    closeModal();\n                })\n                   .catch(() => {\" Invalid user\"});\n        })\n              .catch(() => {\" Invalid user\"});\n       \n};\n\n\n\n      \n  return (\n      <ButtonFormContainer>\n      <button type=\"button\" className=\"button\" onClick={() => setOpen(o => !o)}>\n        <CiLogin />Log In\n          </button>\n          \n      <StyledPopup open={open} className='myPop' closeOnDocumentClick onClose={closeModal}>\n        <Modal className=\"modal\">\n          <button className=\"close\" onClick={closeModal}>\n            &times;</button>\n          <div>\n            <h2>Log In</h2>\n            <p>Welcome back! Please enter your credentials to access your account and continue your search for an teacher.</p>\n            <LoginRegistrationForm onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                    />\n                          </div>\n                <ButtonModalContainer>\n                               <button type=\"submit\">Log In</button>\n                               <GoogleAuth/>    \n                          </ButtonModalContainer>\n            </LoginRegistrationForm>\n        </div>\n        </Modal>\n      </StyledPopup>\n    </ButtonFormContainer>\n    )\n}\n\nexport default LoginForm;","import React, { useState } from 'react'\nimport { ButtonFormContainer, ButtonModalContainer, LoginRegistrationForm, Modal, StyledPopup } from './LoginForm.styled';\nimport { getAuth, createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../Redax/store';\nimport { setUser } from '../../Redax/Auth/authSlice';\nimport { useNavigate } from 'react-router-dom';\n\ntype Props = {}\n\nconst RegistrationForm: React.FC = (props: Props) => {\n    const dispatch: AppDispatch = useDispatch();\n    const navigate = useNavigate();\n     const auth = getAuth();\n    \n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [name, setName] = useState('');\n    const [open, setOpen] = useState(false);\n\n\n    const closeModal = () => setOpen(false);\n   \n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    createUserWithEmailAndPassword(auth, email, password)\n      .then(({ user }) => {\n        user.getIdToken()\n            .then(accessToken => {\n                dispatch(setUser({\n                    id: user.uid,\n                    email: user.email,\n                    name: user.displayName, // Ensure displayName is correctly set\n                    token: accessToken, \n                }))\n                updateProfile(user, {\n      displayName: name \n    })\n                navigate('/');\n                closeModal();\n            })\n            .catch(() => {\" Invalid user\"});\n      })\n        \n     .catch(() => {\" Invalid user\"});\n};\n\n\n      \n  return (\n       <ButtonFormContainer>\n      <button type=\"button\" className=\"button registration\" onClick={() => setOpen(o => !o)}>\n        Registration\n      </button>\n      <StyledPopup open={open} closeOnDocumentClick onClose={closeModal}>\n        <Modal className=\"modal\">\n          <button className=\"close\" onClick={closeModal}>\n            &times;</button>\n          <div>\n            <h2>Registration</h2>\n                      <p>Thank you for your interest in our platform! In order to register, we need some information.\n                          Please provide us with the following information</p>\n                      <LoginRegistrationForm onSubmit={handleSubmit}>\n                          \n                <div>\n                <label htmlFor=\"name\">Name</label>\n                    <input\n                        type=\"name\"\n                        id=\"name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                    />\n                          </div>\n                          <ButtonModalContainer>\n                              <button type=\"submit\">Sign Up</button>\n                          </ButtonModalContainer>\n                \n            </LoginRegistrationForm>\n        </div>\n        </Modal>\n      </StyledPopup>\n    </ButtonFormContainer>\n    )\n}\n\n\nexport default RegistrationForm","import React from 'react'\nimport { AppDispatch } from '../../Redax/store';\nimport { useDispatch } from 'react-redux';\nimport { useAuth } from '../../hooks/auth';\nimport { deleteUser } from '../../Redax/Auth/authSlice';\nimport { NavigationButton } from './header.styled';\nimport { ButtonFormContainer } from '../Forms/LoginForm.styled';\nimport LoginForm from '../Forms/LoginForm';\nimport RegistrationForm from '../Forms/RegistrationForm';\n\nimport { CiLogout } from \"react-icons/ci\";\n\n\ntype Props = {}\n\nconst HeaderButton = (props: Props) => {\nconst dispatch: AppDispatch = useDispatch();\n\tconst { isAuth, name, email } = useAuth();\n\n\tconst handleLogOur = () => {\n\t\tdispatch(deleteUser());\n\t}\n\n  return (\n    <NavigationButton>\n\t\t\t\t{isAuth ?\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>{name ? name : email}</p>\n\t\t\t\t\t\t<ButtonFormContainer>\n\t\t\t\t\t\t\t<button type=\"button\" onClick={handleLogOur}><CiLogout />Log Out</button>\n\t\t\t\t\t\t</ButtonFormContainer>\n\n\t\t\t\t\t\t</>:\n\t\t\t\t\t<>\n\t\t\t\t\t<LoginForm/>\n\t\t\t\t\t<RegistrationForm />\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t\t</NavigationButton>\n  )\n}\n\nexport default HeaderButton","import React, { useEffect, useRef, useState } from 'react';\nimport { BurgerMenuContainer, BurgerMenuModal } from './BurgerMenu.styled';\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { IoCloseSharp } from \"react-icons/io5\";\nimport { Navigator } from '../Navigations/Navigation';\nimport HeaderButton from '../Headers/headerButton';\n\nconst BurgerMenu = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const menuRef = useRef<HTMLDivElement>(null); // Встановлюємо правильний тип для menuRef\n    \n    useEffect(() => {\n        const handleClickOutside = (event: MouseEvent) => {\n            if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n                setIsOpen(false);\n            }\n        };\n\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, []);\n\n    const toggleMenu = () => {\n        setIsOpen(!isOpen);\n    };\n\n    return (\n        <BurgerMenuContainer className=\"burger-menu\">\n            <button className=\"burger-menu__toggle\" onClick={toggleMenu}>\n                {isOpen ? <IoCloseSharp /> : <GiHamburgerMenu />}\n            </button>\n            {isOpen && (\n                <BurgerMenuModal ref={menuRef}>\n                    <ul className=\"burger-menu__list\">\n                        <Navigator />\n                        <HeaderButton />\n                    </ul>\n                </BurgerMenuModal>\n            )}\n        </BurgerMenuContainer>\n    );\n};\n\nexport default BurgerMenu;\n","import React from 'react'\n\n\nimport { HeaderSection, HeaderWrapper, LogoConteiner, Navigation} from './header.styled'\nimport { Navigator } from '../Navigations/Navigation';\nimport { Link } from 'react-router-dom';\n\n\nimport BurgerMenu from '../Burger-menu/BurgerMenu';\nimport HeaderButton from './headerButton';\n\n\n\n\n\nconst Header = () => {\n\t\n\n\treturn (\n        <HeaderSection>\n\t\t\t\n\t\t\t\t <Link to=\"/\">\n\t\t\t\t<LogoConteiner>\n\t\t\t\t<img src={require('../Img/image.png')} alt=\"ukrain\" />\n\t\t\t\t<p>LearnLingo</p>\n\t\t\t\t</LogoConteiner>\n\t\t\t</Link>\n\t\t\t<BurgerMenu/>\n\t\t\n\t\t\t<Navigation>\n\t\t\t\t<Navigator></Navigator>\n\t\t\t</Navigation>\n\t\t\t<HeaderWrapper>\n\t\t\t<HeaderButton/>\n\t\t\t</HeaderWrapper>\n\t\t</HeaderSection>\n\t\n\t)\n}\n\nexport default Header","import React from 'react'\nimport { Outlet } from 'react-router-dom'\nimport Header from '../Headers/header'\n\nconst Layout = () => {\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<Outlet />\n\t\t</>\n\t)\n}\n\nexport default Layout"],"names":["HeaderSection","styled","header","_templateObject","_taggedTemplateLiteral","LogoConteiner","div","_templateObject2","HeaderWrapper","_templateObject3","Navigation","_templateObject4","NavigationButton","_templateObject5","NavigationNav","nav","selectUser","state","user","useAuth","userData","useSelector","email","token","id","name","isAuth","Navigator","_jsxs","children","_jsx","NavLink","className","_ref","isActive","join","to","_ref2","_ref3","BurgerMenuContainer","BurgerMenuModal","ButtonFormContainer","StyledPopup","Popup","Modal","LoginRegistrationForm","form","ButtonModalContainer","props","dispatch","useDispatch","auth","getAuth","type","onClick","loginGoogle","signInWithPopup","provider","then","result","credential","GoogleAuthProvider","credentialFromResult","setUser","uid","displayName","accessToken","catch","LoginForm","navigate","useNavigate","setEmail","useState","password","setPassword","open","setOpen","closeModal","o","CiLogin","closeOnDocumentClick","onClose","onSubmit","event","preventDefault","signInWithEmailAndPassword","getIdToken","htmlFor","value","onChange","e","target","required","GoogleAuth","setName","createUserWithEmailAndPassword","updateProfile","_Fragment","handleLogOur","deleteUser","CiLogout","RegistrationForm","BurgerMenu","isOpen","setIsOpen","menuRef","useRef","useEffect","handleClickOutside","current","contains","document","addEventListener","removeEventListener","toggleMenu","IoCloseSharp","GiHamburgerMenu","ref","HeaderButton","Header","Link","src","require","alt","Layout","Outlet"],"sourceRoot":""}
{"version":3,"file":"static/js/412.5f11a0a3.chunk.js","mappings":"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","sources":["Components/BookTrial/BookTrialLessons.styled.ts","Components/Forms/LoginForm.styled.ts","Components/Headers/header.styled.ts","Components/Navigations/Navigation.styled.ts","Components/Navigations/Navigation.tsx","Components/Burger-menu/BurgerMenu.styled.ts","Components/googleAuth/googleAuth.tsx","Components/Forms/LoginForm.tsx","Components/Forms/RegistrationForm.tsx","Components/Headers/headerButton.tsx","Components/Burger-menu/BurgerMenu.tsx","Components/Headers/header.tsx","Components/Layouts/layout.tsx","Redax/Auth/authSelector.ts","hooks/auth.ts"],"sourcesContent":["import styled from \"styled-components\";\nimport { ErrorMessage } from 'formik';\n\nexport const RadiobuttonContainer = styled.ul`\ndisplay: flex;\nflex-direction: column;\nmargin-top: 21px;\nmargin-bottom: 41px;\ngap: 18px;\n\n    li{\n        display: flex;\n        gap: 8px\n    }\n`\n\n\nexport const InformContainer = styled.div`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        gap: 18px;\n        transition: all 0.3s ease-in-out;\n\n       div{\n            width: 100%;\n            position: relative;\n            \n       }\n\n       input{\n        width: 100%;\n        height: 54px;\n        padding: 16px 18px;\n        box-sizing: border-box;\n        border: 1px solid rgba(18, 20, 23, 0.1);\n        border-radius: 12px;\n       }\n\n       label{\n        position: absolute;\n        top: 35%;\n        left: 5%;\n       }\n `   \n\n export const ButtonBook = styled.button`\n        \n        margin-top: 30px;\n        width: 100%;\n        border-radius: 12px;\n        padding: 16px;\n\n        background: var(--button-color);\n\n        &:hover{\n            background: var(--button-color-hover);\n        }\n        `\n\nexport const ErrorMessages = styled(ErrorMessage)`\n    color: red;\n`","import Popup from \"reactjs-popup\";\nimport styled from \"styled-components\";\n\nexport const ButtonFormContainer = styled.div`\n    button{\n        display: flex;\n        align-items: center;\n        gap: 5px;\n\n        background-color: transparent;\n\n        font-size: 16px;\n        font-weight: 700;\n        line-height: 20px;\n\n        svg{\n            color: var(--button-color);\n            width: 20px;\n            height: 20px;\n        }\n    }\n\n    button:hover{\n        color: var(--button-color-hover);   \n        svg{\n            color: var(--button-color-hover);\n        }\n    }\n\n\n    \n    button.registration{\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n\n        height: 48px;\n        padding: 14px 39px;\n\n        border-radius: 12px;\n        background: rgb(18, 20, 23);\n        color: #ffffff;\n    }\n\n    button.registration:hover{\n        background: var(--button-color-hover);\n        color: #000000\n      \n    }\n\n\n\n`\n\nexport const StyledPopup = styled(Popup)`\n\n\n  &-overlay {\n    background-color: rgba(0, 0, 0, 0.5);\n    overflow-y: auto;\n  }\n@media(max-width: 700px){\n  &-content {\n        max-width: 566px;\n        padding: 0;   \n        min-width: 100%;\n        border-radius: 0;\n    }  \n     }\n  &-content {\n        max-width: 566px;\n        padding: 0;   \n        border-radius: 30px;\n       \n    }  \n\n`\n\nexport const Modal = styled.div`\n        padding: 64px;\n        position: relative;\n        border-radius: 30px;\n        background-color: #ffffff;\n\n        button.close{\n                position: absolute;\n                display: flex;\n                text-align: center;\n                top: 20px;\n                right: 30px;\n                padding: 8px;\n                width: 32px;\n                height: 32px;\n                font-size: 35px;\n                font-weight: 700;\n                background-color: transparent;\n                align-items: center;\n            \n        }\n\n        button.close:hover{\n            color: var(--button-color-hover);\n        }\n\n        h2{\n            font-size: 40px;\n            font-weight: 500;\n            line-height: 48px;\n            letter-spacing: -2%;\n            margin-bottom: 20px;\n        }\n\n        p{\n            font-size: 16px;\n            font-weight: 400;\n            line-height: 22px;\n            letter-spacing: -2%;\n            margin-bottom: 40px;\n        }\n\n        p.bookTrialDesc{\n            font-size: 16px;\n            font-weight: 400;\n            line-height: 22px;\n            color: #121417CC;\n            margin-bottom: 20px;\n        }\n       \n`\n\nexport const LoginRegistrationForm = styled.form`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        gap: 18px;\n        transition: all 0.3s ease-in-out;\n\n       div{\n            width: 100%;\n            position: relative;\n            \n       }\n\n       input{\n        width: 100%;\n        height: 54px;\n        padding: 16px 18px;\n        box-sizing: border-box;\n        border: 1px solid rgba(18, 20, 23, 0.1);\n        border-radius: 12px;\n       }\n      \n       label{\n        position: absolute;\n        top: 35%;\n        left: 5%;\n       }\n    \n\n`\n\nexport const ButtonModalContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 18px;\n    margin-top: 40px;\n\n    button{\n    border-radius: 12px;\n    height: 60px;\n    background-color: var(--button-color);\n    }\n\n    button:hover{\n        background-color: var(--button-color-hover);\n    }\n`","\timport styled from \"styled-components\";\n\n\nexport const HeaderSection = styled.header`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nflex-wrap: wrap;\n\n@media(min-width: 700px){\n\tmax-width: 1184px;\n\tmargin-right: auto;\n    margin-left: auto;\n\tcolor: var(----button-color-hover);\n}\n`\n\nexport const LogoConteiner = styled.div`\ndisplay: flex;\nalign-items: center;\ngap: 5px;\n\n\np{\n    font-weight: 500;\n\tcolor: var(--text-color);\n\tfont-size: 20px;\n  \tbox-sizing: border-box;\n}\n\nimg{\n\twidth: 28px;\n\theight: 28px;\n}\n\n\n`\n\nexport const HeaderWrapper = styled.div`\n@media(max-width: 700px){\n\tdisplay: none;\n}\n`\n\nexport const Navigation = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\n\n@media(max-width: 700px){\ndisplay: none;\n}\n\n`\n\nexport const NavigationButton = styled.div`\ndisplay: flex;\nalign-items: center;\ngap: 16px;\n\np{\t\n\tposition: relative;\n\tborder-radius: 2px;\n\tfont-weight: 500;\n\tfont-style: italic;\n}\n\np::before{\n\tcontent: \"\";\n\tposition: absolute;\n\tbottom: 0;\n    width: 100%;\n\ttransform: translate(5%, -55%);\n    height: 10px;\n    background: var(--button-color-hover);\n\tz-index: -1;\n\tborder-radius: 3px;\n}\n\n@media(max-width: 700px){\n\tflex-direction: column;\n\tgap: 10px;\n\tpadding-top: 10px;\n\tmargin-top: 20px;\n\tborder-top: 1px solid var(--text-color-grey);\n}\n`","\nimport styled from \"styled-components\";\n\nexport const NavigationNav = styled.nav`\n\tdisplay: flex;\n    justify-content: space-around;\n\talign-items: center;\n\tgap: 20px;\n\n\t\ta{\n\t\t\tcolor: black;\n\t\t\tpadding: 6px;\n\t\t\tborder-bottom: 2px solid transparent;\n\t}\n\n\ta:hover,\n\ta:focus{\n\t\tcolor: var(--button-color);\n\t}\n\n\t.active{\n\t\tcolor: var(--button-color);\n\t\tborder-color: var(--button-color);\t\t\n\t}\n\n\t@media(max-width: 700px){\n\t\tflex-direction: column;\n\t\tgap: 10px;\n\t\talign-items: flex-start;\n\t\t\n\t\t}\n`","import React from 'react';\nimport { NavigationNav } from './Navigation.styled';\nimport { NavLink } from 'react-router-dom';\nimport { useAuth } from '../../hooks/auth';\n\ninterface NavigatorProps {\n    toggleMenu?: () => void;\n}\n\n\nexport const Navigator = ({ toggleMenu }: NavigatorProps) => {\n\n  const { isAuth } = useAuth();\n\n\n   const handleButtonClick = () => {\n     if (toggleMenu) {\n            toggleMenu();\n        }\n  };\n\n  return (\n    <NavigationNav>\n\t\t  <NavLink onClick={handleButtonClick} className={({isActive}) =>\n\t\t\t  [\n\t\t\t\tisActive ? \"active\" : \"\",\n\t\t\t  ].join(\" \")} to=\"/\">\n        Home\n      </NavLink>\n      <NavLink  onClick={handleButtonClick} className={({isActive}) =>\n\t\t\t  [\n\t\t\t\tisActive ? \"active\" : \"\",\n\t\t\t  ].join(\" \")}  to=\"/teachers\">\n        Teachers\n      </NavLink>\n      {isAuth && (\n        <NavLink onClick={handleButtonClick} className={({ isActive }) =>\n          [\n            isActive ? \"active\" : \"\",\n          ].join(\" \")} to=\"/favorites\">\n          Favorites\n        </NavLink>)\n        }\n    </NavigationNav>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const BurgerMenuContainer = styled.div`\nposition: relative;\ndisplay: none;\n\n@media(max-width: 700px){\ndisplay: block;\n\n    button{\n        display: flex;\n        align-items: center;\n        background-color: transparent;\n    }\n\n    svg{\n        width: 20px;\n        height: 20px;\n    }\n\n    button:hover{\n        color: var(--button-color-hover);\n    }\n}\n`\n\nexport const BurgerMenuModal = styled.div`\nposition: absolute;\nbackground-color: #ffffff;\ntop: 40px;\nright: 0;\nwidth: 250px;\npadding: 20px;\nborder: 2px solid black;\nborder-radius: 10px;\nz-index: 100;\n\n`","import React from 'react'\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { provider } from '../../firebase/conect';\nimport { AppDispatch } from '../../Redax/store';\nimport { useDispatch } from 'react-redux';\nimport { setUser } from '../../Redax/Auth/authSlice';\n\ninterface Props {\n  closeModal: () => void;\n}\n\nconst GoogleAuth: React.FC<Props> = ({ closeModal }: Props) => {\n     const dispatch: AppDispatch = useDispatch();\n    const auth = getAuth();\n\n    const loginGoogle = () => {\n\n      signInWithPopup(auth, provider)\n        .then((result) => {\n          const credential = GoogleAuthProvider.credentialFromResult(result);\n          const user = result.user;\n              \n          dispatch(setUser({\n            id: user.uid,\n            email: user.email,\n            name: user.displayName,\n            token: credential?.accessToken\n          }));\n          closeModal(); \n\n            }).catch(() => {\" Invalid user\"});\n               \n    }\n\n\n  return (\n    <button type='button' onClick={loginGoogle}>Google</button>\n  )\n}\n\nexport default GoogleAuth","import React, { useEffect, useState } from 'react';\nimport { ButtonFormContainer, ButtonModalContainer, Modal, StyledPopup } from './LoginForm.styled';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\nimport { useDispatch } from 'react-redux';\nimport { setUser } from '../../Redax/Auth/authSlice';\nimport { AppDispatch } from '../../Redax/store';\nimport GoogleAuth from '../googleAuth/googleAuth';\nimport { CiLogin } from 'react-icons/ci';\nimport { InformContainer } from '../BookTrial/BookTrialLessons.styled';\nimport { toast } from 'react-toastify';\n import 'react-toastify/dist/ReactToastify.css';\n\ninterface LoginProps {\n  toggleMenu?: () => void;\n}\n\nconst LoginForm: React.FC<LoginProps> = ({ toggleMenu }: LoginProps) => {\n  const dispatch: AppDispatch = useDispatch();\n\n  const [open, setOpen] = useState(false);\n  const closeModal = () => {\n    setOpen(false);\n    document.body.style.overflow = 'unset';\n  }\n\n  useEffect(() => {\n    if (open) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n   }, [open]);\n  \n  \n\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email address').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n\n  const handleSubmit = (values: any) => {\n    const { email, password } = values;\n    const auth = getAuth();\n    signInWithEmailAndPassword(auth, email, password)\n      .then(({ user }) => {\n        user.getIdToken()\n          .then((accessToken) => {\n            dispatch(\n              setUser({\n                id: user.uid,\n                email: user.email,\n                name: user.displayName,\n                token: accessToken\n              })\n            );\n            closeModal();\n          })\n          .catch(() => {\n             toast.error('Invalid user!');\n          });\n      })\n      .catch(() => {\n         toast.error('Invalid user!');\n      });\n};\n\n  return (\n    <ButtonFormContainer>\n      <button type=\"button\" className=\"button\" onClick={() => setOpen(true)}>\n        <CiLogin />Log In\n      </button>\n\n      <StyledPopup open={open} className=\"myPop\" closeOnDocumentClick onClose={closeModal}>\n        <Modal className=\"modal\">\n          <button className=\"close\" onClick={closeModal}>\n            &times;\n          </button>\n          <div>\n            <h2>Log In</h2>\n            <p>Welcome back! Please enter your credentials to access your account and continue your search for a teacher.</p>\n            <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>\n              <Form>\n                 <InformContainer>\n                <div>\n                  <Field type=\"email\" id=\"email\" name=\"email\" required placeholder=\"Enter your email\"/>\n                  <ErrorMessage name=\"email\" component=\"div\" className=\"error\" />\n                </div>\n                <div> \n                  <Field type=\"password\" id=\"password\" name=\"password\" required placeholder=\"Enter your password\"/>\n                  <ErrorMessage name=\"password\" component=\"div\" className=\"error\" />\n                </div>\n                  </InformContainer>  \n                <ButtonModalContainer>\n                  <button type=\"submit\">Log In</button>\n                  <GoogleAuth closeModal={closeModal}/>\n                </ButtonModalContainer>\n              </Form>\n            </Formik>\n          </div>\n        </Modal>\n      </StyledPopup>\n    </ButtonFormContainer>\n  );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from 'react';\nimport { ButtonFormContainer, ButtonModalContainer, Modal, StyledPopup } from './LoginForm.styled';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { getAuth, createUserWithEmailAndPassword, updateProfile } from 'firebase/auth';\nimport { useDispatch } from 'react-redux';\nimport { setUser } from '../../Redax/Auth/authSlice';\nimport { AppDispatch } from '../../Redax/store';\nimport { InformContainer } from '../BookTrial/BookTrialLessons.styled';\nimport { toast } from 'react-toastify';\n import 'react-toastify/dist/ReactToastify.css';\n\nconst RegistrationForm: React.FC = () => {\n  const dispatch: AppDispatch = useDispatch();\n  const auth = getAuth();\n\n  const [open, setOpen] = useState(false);\n\n  const closeModal = () => {\n    setOpen(false);\n    document.body.style.overflow = 'unset';\n  }\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: ''\n  };\n\n\n  useEffect(() => {\n    if (open) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n   }, [open]);\n\n  \n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name is required'),\n    email: Yup.string().email('Invalid email address').required('Email is required'),\n    password: Yup.string().required('Password is required').min(6, 'Password must be at least 6 characters')\n  });\n\n  const handleSubmit = (values: any) => {\n    const { name, email, password } = values;\n    createUserWithEmailAndPassword(auth, email, password)\n      .then(({ user }) => {\n        user.getIdToken().then((accessToken) => {\n          dispatch(\n            setUser({\n              id: user.uid,\n              email: user.email,\n              name: name,\n              token: accessToken\n            })\n          );\n          updateProfile(user, {\n            displayName: name\n          });\n          closeModal();\n        });\n      })\n      .catch(() => {\n         toast.error('Invalid user!');\n      });\n  };\n\n  return (\n    <ButtonFormContainer>\n      <button type=\"button\" className=\"button registration\" onClick={() => setOpen((o) => !o)}>\n        Registration\n      </button>\n      <StyledPopup open={open} closeOnDocumentClick onClose={closeModal}>\n        <Modal className=\"modal\">\n          <button className=\"close\" onClick={closeModal}>\n            &times;\n          </button>\n          <div>\n            <h2>Registration</h2>\n            <p>\n              Thank you for your interest in our platform! In order to register, we need some information. Please provide\n              us with the following information.\n            </p>\n            <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>\n              <Form>\n                <InformContainer>\n                  <div>\n                  \n                  <Field type=\"text\" id=\"name\" name=\"name\" placeholder=\"Enter your name\" />\n                  <ErrorMessage name=\"name\" component=\"div\" className=\"error\" />\n                </div>\n                <div>\n                  \n                  <Field type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n                  <ErrorMessage name=\"email\" component=\"div\" className=\"error\" />\n                </div>\n                <div>\n                  \n                  <Field type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\" />\n                  <ErrorMessage name=\"password\" component=\"div\" className=\"error\" />\n                </div>\n                </InformContainer>\n                <ButtonModalContainer>\n                  <button type=\"submit\">Sign Up</button>\n                </ButtonModalContainer>\n              </Form>\n            </Formik>\n          </div>\n        </Modal>\n      </StyledPopup>\n    </ButtonFormContainer>\n  );\n};\n\nexport default RegistrationForm;\n","import React from 'react'\nimport { AppDispatch } from '../../Redax/store';\nimport { useDispatch } from 'react-redux';\nimport { useAuth } from '../../hooks/auth';\nimport { deleteUser } from '../../Redax/Auth/authSlice';\nimport { NavigationButton } from './header.styled';\nimport { ButtonFormContainer } from '../Forms/LoginForm.styled';\nimport LoginForm from '../Forms/LoginForm';\nimport RegistrationForm from '../Forms/RegistrationForm';\n\nimport { CiLogout } from \"react-icons/ci\";\nimport { useNavigate } from 'react-router-dom';\n\ninterface HeaderButtonProps {\n    toggleMenu?: () => void;\n}\n\n\nconst HeaderButton = ({ toggleMenu }: HeaderButtonProps) => {\n\tconst dispatch: AppDispatch = useDispatch();\n\tconst { isAuth, name, email } = useAuth();\n\tconst navigate = useNavigate();\n\n\tconst handleLogOur = () => {\n\t\tdispatch(deleteUser());\n\t\tnavigate('/');\n\t}\n\n  return (\n    <NavigationButton>\n\t\t\t\t{isAuth ?\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>{name ? name : email}</p>\n\t\t\t\t\t\t<ButtonFormContainer>\n\t\t\t\t\t\t\t<button type=\"button\" onClick={handleLogOur}><CiLogout />Log Out</button>\n\t\t\t\t\t\t</ButtonFormContainer>\n\n\t\t\t\t\t\t</>:\n\t\t\t\t\t<>\n\t\t\t\t  \t<LoginForm toggleMenu={toggleMenu}/>\n\t\t\t\t\t<RegistrationForm/>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t\t</NavigationButton>\n  )\n}\n\nexport default HeaderButton","import React, { useEffect, useRef, useState } from 'react';\nimport { BurgerMenuContainer, BurgerMenuModal } from './BurgerMenu.styled';\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { IoCloseSharp } from \"react-icons/io5\";\nimport { Navigator } from '../Navigations/Navigation';\nimport HeaderButton from '../Headers/headerButton';\n\nconst BurgerMenu = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const menuRef = useRef<HTMLDivElement>(null);\n    \n    useEffect(() => {\n        const handleClickOutside = (event: MouseEvent) => {\n            if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n                setIsOpen(false);\n            }\n        };\n\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, []);\n\n    const toggleMenu = () => {\n        setIsOpen(!isOpen);\n    };\n\n    return (\n        <BurgerMenuContainer className=\"burger-menu\">\n            <button className=\"burger-menu__toggle\" onClick={toggleMenu}>\n                {isOpen ? <IoCloseSharp /> : <GiHamburgerMenu />}\n            </button>\n            {isOpen && (\n                <BurgerMenuModal ref={menuRef}>\n                    <ul className=\"burger-menu__list\">\n                        <Navigator toggleMenu={toggleMenu} />\n                        <HeaderButton toggleMenu={toggleMenu}/>\n                    </ul>\n                </BurgerMenuModal>\n            )}\n        </BurgerMenuContainer>\n    );\n};\n\nexport default BurgerMenu;\n","import React from 'react'\n\n\nimport { HeaderSection, HeaderWrapper, LogoConteiner, Navigation} from './header.styled'\nimport { Navigator } from '../Navigations/Navigation';\nimport { Link } from 'react-router-dom';\n\n\nimport BurgerMenu from '../Burger-menu/BurgerMenu';\nimport HeaderButton from './headerButton';\n\n\n\n\n\nconst Header = () => {\n\t\n\n\treturn (\n        <HeaderSection>\n\t\t\t\n\t\t\t\t <Link to=\"/\">\n\t\t\t\t<LogoConteiner>\n\t\t\t\t<img src={require('../Img/image.png')} alt=\"ukrain\" />\n\t\t\t\t<p>LearnLingo</p>\n\t\t\t\t</LogoConteiner>\n\t\t\t</Link>\n\t\t\t<BurgerMenu/>\n\t\t\n\t\t\t<Navigation>\n\t\t\t\t<Navigator></Navigator>\n\t\t\t</Navigation>\n\t\t\t<HeaderWrapper>\n\t\t\t<HeaderButton/>\n\t\t\t</HeaderWrapper>\n\t\t</HeaderSection>\n\t\n\t)\n}\n\nexport default Header","import React from 'react'\nimport { Outlet } from 'react-router-dom'\nimport Header from '../Headers/header'\n\nconst Layout = () => {\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<Outlet />\n\t\t</>\n\t)\n}\n\nexport default Layout","import { RootState } from \"../store\";\n\nexport const selectUser = (state: RootState) => state.user","import { useSelector } from 'react-redux';\nimport { selectUser } from '../Redax/Auth/authSelector';\n\ninterface AuthSelector {\n    name: string;\n    email: string;\n    token: string;\n    id: string;\n}\n\nexport const useAuth = () => {\n    const userData = useSelector(selectUser) as AuthSelector | undefined;\n\n    const { email = '', token = '', id = '', name = '' } = userData || {};\n\n    return {\n        isAuth: !!email,\n        email,\n        token,\n        id,\n        name,\n    };\n};\n"],"names":["RadiobuttonContainer","styled","ul","_templateObject","_taggedTemplateLiteral","InformContainer","div","_templateObject2","ButtonBook","button","_templateObject3","ErrorMessage","_templateObject4","ButtonFormContainer","StyledPopup","Popup","Modal","ButtonModalContainer","form","_templateObject5","HeaderSection","header","LogoConteiner","HeaderWrapper","Navigation","NavigationButton","NavigationNav","nav","Navigator","_ref","toggleMenu","isAuth","useAuth","handleButtonClick","_jsxs","children","_jsx","NavLink","onClick","className","_ref2","isActive","join","to","_ref3","_ref4","BurgerMenuContainer","BurgerMenuModal","closeModal","dispatch","useDispatch","auth","getAuth","type","loginGoogle","signInWithPopup","provider","then","result","credential","GoogleAuthProvider","credentialFromResult","user","setUser","id","uid","email","name","displayName","token","accessToken","catch","open","setOpen","useState","document","body","style","overflow","useEffect","validationSchema","Yup","required","password","CiLogin","closeOnDocumentClick","onClose","Formik","initialValues","onSubmit","values","signInWithEmailAndPassword","getIdToken","toast","error","Form","Field","placeholder","component","GoogleAuth","RegistrationForm","min","o","createUserWithEmailAndPassword","updateProfile","navigate","useNavigate","_Fragment","handleLogOur","deleteUser","CiLogout","LoginForm","BurgerMenu","isOpen","setIsOpen","menuRef","useRef","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","IoCloseSharp","GiHamburgerMenu","ref","HeaderButton","Header","Link","src","require","alt","Layout","Outlet","selectUser","state","userData","useSelector"],"sourceRoot":""}